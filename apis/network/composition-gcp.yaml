apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xnetworks.infrastructure.example.org
  labels:
    provider: gcp
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: infrastructure.example.org/v1alpha1
    kind: XNetwork
  patchSets:
  - name: network-id
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.id
      toFieldPath: metadata.labels[networks.infrastructure.example.org/network-id]
  resources:
    - base:
        apiVersion: compute.gcp.upbound.io/v1beta1
        kind: Network
        spec:
          forProvider:
            autoCreateSubnetworks: false
            routingMode: REGIONAL
      patches:
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
        - fromFieldPath: spec.id
          toFieldPath: metadata.labels[networks.infrastructure.example.org/network-id]
    - base:
        apiVersion: compute.gcp.upbound.io/v1beta1
        kind: Subnetwork
        spec:
          forProvider:
            region: us-west2 #patched
            networkSelector:
              # This selector ensures this Subnetwork will select and use the
              # above Network. They will both be part of the XR, and thus their
              # controller references will match.
              matchControllerRef: true
            privateIpGoogleAccess: true
            ipCidrRange: 172.16.0.0/16
            secondaryIpRange:
              - rangeName: pods
                ipCidrRange: 10.200.0.0/14
              - rangeName: services
                ipCidrRange: 10.204.0.0/16
      patches:
        - fromFieldPath: spec.id
          toFieldPath: metadata.labels[networks.infrastructure.example.org/network-id]
        - fromFieldPath: spec.location
          toFieldPath: spec.forProvider.region
          transforms:
            - type: map
              map:
                'East US': 'us-east1'
                'West US': 'us-west2'